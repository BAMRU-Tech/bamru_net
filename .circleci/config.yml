# Python CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-python/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      # use `-browsers` prefix for selenium tests, e.g. `3.6.1-browsers`
      - image: circleci/python:3.5
        environment:
          POSTGRES_PASSWORD: postgres
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:9.5-alpine

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
          # fallback to using the latest cache if no exact match is found
          #- v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
        
      # run tests!
      # this example uses Django's built-in test-runner
      # other common Python testing frameworks include pytest and nose
      # https://pytest.org
      # https://nose.readthedocs.io
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            python manage.py makemigrations
            python manage.py test
          environment:
            # Many of these aren't used in testing, but the django app expects
            # them in the environment.

            DJANGO_HOSTNAME: 'localhost:8000'

            DJANGO_DEBUG: True
            DJANGO_SECRET_KEY: "TEST_ONLY_INSECURE_SECRET_KEY"
            DJANGO_ALLOWED_HOST: 'localhost'
            DJANGO_DB_NAME: postgres
            DJANGO_DB_USER: postgres
            DJANGO_DB_PASS: postgres
            DJANGO_DB_HOST: 127.0.0.1

            MESSAGE_FILE_PATH: /tmp
            LOG_ROOT: /tmp

            MAILGUN_WEBHOOK_SECRET: ''
            MAILGUN_API_KEY: ''
            MAILGUN_EMAIL_FROM: 'bamru_net@example.com'

            CELERY_BROKER_URL: 'amqp://bnet:bnet_pass@localhost:5672/bnet'


      - store_artifacts:
          path: test-reports
          destination: test-reports
