# Generated by Django 2.0.3 on 2018-05-23 06:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('typ', models.CharField(choices=[('home', 'home FIXME'), ('Home', 'Home'), ('Work', 'Work'), ('Other', 'Other')], max_length=255)),
                ('address1', models.CharField(blank=True, max_length=255, null=True)),
                ('address2', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('state', models.CharField(blank=True, max_length=255, null=True)),
                ('zip', models.CharField(blank=True, max_length=255, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'addresses',
            },
        ),
        migrations.CreateModel(
            name='AlertSubscriptions',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('event_typ', models.TextField(blank=True, null=True)),
                ('role_typ', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'alert_subscriptions',
            },
        ),
        migrations.CreateModel(
            name='ArInternalMetadata',
            fields=[
                ('key', models.TextField(primary_key=True, serialize=False)),
                ('value', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'ar_internal_metadata',
            },
        ),
        migrations.CreateModel(
            name='AvailDos',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('member_id', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('quarter', models.IntegerField(blank=True, null=True)),
                ('week', models.IntegerField(blank=True, null=True)),
                ('typ', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'avail_dos',
            },
        ),
        migrations.CreateModel(
            name='AvailOps',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('member_id', models.IntegerField(blank=True, null=True)),
                ('start_on', models.DateField(blank=True, null=True)),
                ('end_on', models.DateField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'avail_ops',
            },
        ),
        migrations.CreateModel(
            name='BrowserProfiles',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('member_id', models.IntegerField(blank=True, null=True)),
                ('ip', models.TextField(blank=True, null=True)),
                ('browser_type', models.TextField(blank=True, null=True)),
                ('browser_version', models.TextField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('ostype', models.TextField(blank=True, null=True)),
                ('javascript', models.NullBooleanField()),
                ('cookies', models.NullBooleanField()),
                ('screen_height', models.IntegerField(blank=True, null=True)),
                ('screen_width', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'browser_profiles',
            },
        ),
        migrations.CreateModel(
            name='Certs',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('member_id', models.IntegerField(blank=True, null=True)),
                ('typ', models.TextField(blank=True, null=True)),
                ('expiration', models.DateField(blank=True, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('link', models.TextField(blank=True, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('cert_file', models.TextField(blank=True, null=True)),
                ('cert_file_name', models.TextField(blank=True, null=True)),
                ('cert_content_type', models.TextField(blank=True, null=True)),
                ('cert_file_size', models.TextField(blank=True, null=True)),
                ('cert_updated_at', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('ninety_day_notice_sent_at', models.DateTimeField(blank=True, null=True)),
                ('thirty_day_notice_sent_at', models.DateTimeField(blank=True, null=True)),
                ('expired_notice_sent_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'certs',
            },
        ),
        migrations.CreateModel(
            name='Chats',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('member_id', models.IntegerField(blank=True, null=True)),
                ('client', models.TextField(blank=True, null=True)),
                ('lat', models.TextField(blank=True, null=True)),
                ('lon', models.TextField(blank=True, null=True)),
                ('ip_address', models.TextField(blank=True, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'chats',
            },
        ),
        migrations.CreateModel(
            name='DataFiles',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('member_id', models.IntegerField(blank=True, null=True)),
                ('download_count', models.IntegerField(blank=True, null=True)),
                ('data_file_extension', models.TextField(blank=True, null=True)),
                ('data_file_name', models.TextField(blank=True, null=True)),
                ('data_file_size', models.TextField(blank=True, null=True)),
                ('data_content_type', models.TextField(blank=True, null=True)),
                ('data_updated_at', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('killme1', models.IntegerField(blank=True, null=True)),
                ('killme2', models.IntegerField(blank=True, null=True)),
                ('caption', models.TextField(blank=True, null=True)),
                ('published', models.NullBooleanField()),
            ],
            options={
                'db_table': 'data_files',
            },
        ),
        migrations.CreateModel(
            name='DataLinks',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('member_id', models.IntegerField(blank=True, null=True)),
                ('site_url', models.TextField(blank=True, null=True)),
                ('caption', models.TextField(blank=True, null=True)),
                ('published', models.NullBooleanField()),
                ('link_backup_file_name', models.TextField(blank=True, null=True)),
                ('link_backup_content_type', models.TextField(blank=True, null=True)),
                ('link_backup_file_size', models.IntegerField(blank=True, null=True)),
                ('link_backup_updated_at', models.IntegerField(blank=True, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'data_links',
            },
        ),
        migrations.CreateModel(
            name='DataPhotos',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('member_id', models.IntegerField(blank=True, null=True)),
                ('caption', models.TextField(blank=True, null=True)),
                ('image_file_name', models.TextField(blank=True, null=True)),
                ('image_content_type', models.TextField(blank=True, null=True)),
                ('image_file_size', models.IntegerField(blank=True, null=True)),
                ('image_updated_at', models.IntegerField(blank=True, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('published', models.NullBooleanField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'data_photos',
            },
        ),
        migrations.CreateModel(
            name='Distribution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('email', models.NullBooleanField()),
                ('phone', models.NullBooleanField()),
                ('read', models.NullBooleanField()),
                ('bounced', models.NullBooleanField()),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('response_seconds', models.IntegerField(blank=True, null=True)),
                ('rsvp', models.NullBooleanField()),
                ('rsvp_answer', models.CharField(blank=True, max_length=255, null=True)),
                ('unauth_rsvp_token', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('unauth_rsvp_expires_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'distributions',
            },
        ),
        migrations.CreateModel(
            name='DoAssignments',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('org_id', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('quarter', models.IntegerField(blank=True, null=True)),
                ('week', models.IntegerField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('primary_id', models.IntegerField(blank=True, null=True)),
                ('backup_id', models.IntegerField(blank=True, null=True)),
                ('start', models.DateTimeField(blank=True, null=True)),
                ('finish', models.DateTimeField(blank=True, null=True)),
                ('reminder_notice_sent_at', models.DateTimeField(blank=True, null=True)),
                ('alert_notice_sent_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'do_assignments',
            },
        ),
        migrations.CreateModel(
            name='Email',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('typ', models.CharField(choices=[('Home', 'Home'), ('Personal', 'Personal'), ('Work', 'Work'), ('Other', 'Other')], max_length=255)),
                ('pagable', models.CharField(blank=True, max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'emails',
            },
        ),
        migrations.CreateModel(
            name='EmergencyContact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('number', models.CharField(blank=True, max_length=255, null=True)),
                ('typ', models.CharField(blank=True, choices=[('Home', 'Home'), ('Mobile', 'Mobile'), ('Work', 'Work'), ('Other', 'Other')], max_length=255, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'emergency_contacts',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('typ', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('leaders', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=255, null=True)),
                ('lat', models.CharField(blank=True, max_length=255, null=True)),
                ('lon', models.CharField(blank=True, max_length=255, null=True)),
                ('start', models.DateTimeField(blank=True, null=True)),
                ('finish', models.DateTimeField(blank=True, null=True)),
                ('all_day', models.NullBooleanField()),
                ('published', models.NullBooleanField()),
            ],
            options={
                'db_table': 'events',
            },
        ),
        migrations.CreateModel(
            name='EventFiles',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField(blank=True, null=True)),
                ('data_file_id', models.IntegerField(blank=True, null=True)),
                ('keyval', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'event_files',
            },
        ),
        migrations.CreateModel(
            name='EventLinks',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField(blank=True, null=True)),
                ('data_link_id', models.IntegerField(blank=True, null=True)),
                ('keyval', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'event_links',
            },
        ),
        migrations.CreateModel(
            name='EventPhotos',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('event_id', models.IntegerField(blank=True, null=True)),
                ('data_photo_id', models.IntegerField(blank=True, null=True)),
                ('keyval', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'event_photos',
            },
        ),
        migrations.CreateModel(
            name='EventReports',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('typ', models.TextField(blank=True, null=True)),
                ('member_id', models.IntegerField(blank=True, null=True)),
                ('event_id', models.IntegerField(blank=True, null=True)),
                ('period_id', models.IntegerField(blank=True, null=True)),
                ('title', models.TextField(blank=True, null=True)),
                ('data', models.TextField(blank=True, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('published', models.NullBooleanField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'event_reports',
            },
        ),
        migrations.CreateModel(
            name='InboundMails',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('outbound_mail_id', models.IntegerField(blank=True, null=True)),
                ('from_field', models.TextField(blank=True, db_column='from', null=True)),
                ('to', models.TextField(blank=True, null=True)),
                ('uid', models.TextField(blank=True, null=True)),
                ('subject', models.TextField(blank=True, null=True)),
                ('label', models.TextField(blank=True, null=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('rsvp_answer', models.TextField(blank=True, null=True)),
                ('send_time', models.DateTimeField(blank=True, null=True)),
                ('bounced', models.NullBooleanField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('ignore_bounce', models.NullBooleanField()),
            ],
            options={
                'db_table': 'inbound_mails',
            },
        ),
        migrations.CreateModel(
            name='Journals',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('member_id', models.IntegerField(blank=True, null=True)),
                ('distribution_id', models.IntegerField(blank=True, null=True)),
                ('action', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'journals',
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('user_name', models.CharField(blank=True, max_length=255, null=True)),
                ('typ', models.CharField(blank=True, choices=[('TM', 'Technical Member'), ('FM', 'Field Member'), ('T', 'Trainee'), ('R', 'Reserve'), ('S', 'Support'), ('A', 'Associate'), ('G', 'Guest'), ('MA', 'Member Alum'), ('GA', 'Guest Alum'), ('MN', 'Member No-contact'), ('GN', 'Guest No-contact')], max_length=255, null=True)),
                ('dl', models.CharField(blank=True, max_length=255, null=True)),
                ('ham', models.CharField(blank=True, max_length=255, null=True)),
                ('v9', models.CharField(blank=True, max_length=255, null=True)),
                ('admin', models.NullBooleanField()),
                ('developer', models.NullBooleanField()),
                ('current_do', models.NullBooleanField()),
                ('sign_in_count', models.IntegerField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=255, null=True)),
                ('last_sign_in_at', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('role_score', models.IntegerField(blank=True, null=True)),
                ('typ_score', models.IntegerField(blank=True, null=True)),
                ('password_digest', models.CharField(blank=True, max_length=255, null=True)),
                ('remember_me_token', models.CharField(blank=True, max_length=255, null=True)),
                ('forgot_password_token', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('forgot_password_expires_at', models.DateTimeField(blank=True, null=True)),
                ('google_oauth_token', models.CharField(blank=True, max_length=255, null=True)),
                ('remember_created_at', models.TimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'members',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ip_address', models.CharField(blank=True, max_length=255, null=True)),
                ('text', models.TextField(blank=True, null=True)),
                ('format', models.CharField(blank=True, max_length=255, null=True)),
                ('linked_rsvp_id', models.IntegerField(blank=True, null=True)),
                ('ancestry', models.CharField(blank=True, max_length=255, null=True)),
                ('period_id', models.IntegerField(blank=True, null=True)),
                ('period_format', models.CharField(blank=True, max_length=255, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bnet.Member')),
            ],
            options={
                'db_table': 'messages',
            },
        ),
        migrations.CreateModel(
            name='Orgs',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'orgs',
            },
        ),
        migrations.CreateModel(
            name='OtherInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('label', models.CharField(blank=True, max_length=255, null=True)),
                ('value', models.CharField(blank=True, max_length=255, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bnet.Member')),
            ],
            options={
                'db_table': 'other_infos',
            },
        ),
        migrations.CreateModel(
            name='OutboundMails',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('distribution_id', models.IntegerField(blank=True, null=True)),
                ('email_id', models.IntegerField(blank=True, null=True)),
                ('phone_id', models.IntegerField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('label', models.TextField(blank=True, null=True)),
                ('read', models.NullBooleanField()),
                ('bounced', models.NullBooleanField()),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('sms_member_number', models.TextField(blank=True, null=True)),
                ('sms_service_number', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'outbound_mails',
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ahc', models.NullBooleanField()),
                ('ol', models.NullBooleanField()),
                ('comment', models.CharField(blank=True, max_length=255, null=True)),
                ('en_route_at', models.DateTimeField(blank=True, null=True)),
                ('return_home_at', models.DateTimeField(blank=True, null=True)),
                ('signed_in_at', models.DateTimeField(blank=True, null=True)),
                ('signed_out_at', models.DateTimeField(blank=True, null=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bnet.Member')),
            ],
            options={
                'db_table': 'participants',
            },
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('start', models.DateTimeField(blank=True, null=True)),
                ('finish', models.DateTimeField(blank=True, null=True)),
                ('rsvp_id', models.IntegerField(blank=True, null=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bnet.Event')),
            ],
            options={
                'db_table': 'periods',
            },
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('typ', models.CharField(choices=[('Home', 'Home'), ('Mobile', 'Mobile'), ('Work', 'Work'), ('Pager', 'Pager'), ('Other', 'Other')], max_length=255)),
                ('number', models.CharField(blank=True, max_length=255, null=True)),
                ('pagable', models.CharField(blank=True, max_length=255, null=True)),
                ('sms_email', models.CharField(blank=True, max_length=255, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bnet.Member')),
            ],
            options={
                'db_table': 'phones',
            },
        ),
        migrations.CreateModel(
            name='Photos',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('member_id', models.IntegerField(blank=True, null=True)),
                ('image_file_name', models.TextField(blank=True, null=True)),
                ('image_content_type', models.TextField(blank=True, null=True)),
                ('image_file_size', models.IntegerField(blank=True, null=True)),
                ('image_updated_at', models.IntegerField(blank=True, null=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'photos',
            },
        ),
        migrations.CreateModel(
            name='QueueClassicJobs',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('q_name', models.TextField(blank=True, null=True)),
                ('method', models.TextField(blank=True, null=True)),
                ('args', models.TextField(blank=True, null=True)),
                ('locked_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'queue_classic_jobs',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('typ', models.CharField(blank=True, max_length=255, null=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bnet.Member')),
            ],
            options={
                'db_table': 'roles',
            },
        ),
        migrations.CreateModel(
            name='Rsvps',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('message_id', models.IntegerField(blank=True, null=True)),
                ('prompt', models.TextField(blank=True, null=True)),
                ('yes_prompt', models.TextField(blank=True, null=True)),
                ('no_prompt', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rsvps',
            },
        ),
        migrations.CreateModel(
            name='RsvpTemplates',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('name', models.TextField(blank=True, null=True)),
                ('prompt', models.TextField(blank=True, null=True)),
                ('yes_prompt', models.TextField(blank=True, null=True)),
                ('no_prompt', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'rsvp_templates',
            },
        ),
        migrations.CreateModel(
            name='SchemaMigrations',
            fields=[
                ('version', models.TextField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'schema_migrations',
            },
        ),
        migrations.AddField(
            model_name='participant',
            name='period',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bnet.Period'),
        ),
        migrations.AddField(
            model_name='emergencycontact',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bnet.Member'),
        ),
        migrations.AddField(
            model_name='email',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bnet.Member'),
        ),
        migrations.AddField(
            model_name='distribution',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bnet.Member'),
        ),
        migrations.AddField(
            model_name='distribution',
            name='message',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bnet.Message'),
        ),
        migrations.AddField(
            model_name='address',
            name='member',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bnet.Member'),
        ),
    ]
